{"version":3,"sources":["components/Search.module.css","components/Details.js","components/MovieCard.js","components/redux/action.js","components/Search.js","components/Watchlist.js","App.js","serviceWorker.js","components/redux/reducer.js","components/redux/store.js","index.js","components/MovieCard.module.css"],"names":["module","exports","Details","props","getDetails","id","fetch","then","res","json","data","setState","hidden","state","movieDetails","this","Plot","Genre","Awards","Actors","Director","Writer","imdbRating","Button","className","styles","button","onClick","variant","details","rating","imdb","href","target","Component","mapDispatchToProps","addMovie","value","type","deleteMovie","connect","movies","Col","sm","md","lg","Card","card","src","movie","Poster","image","alt","info","Title","Year","buttons","imdbID","findIndex","Search","handleFormSubmit","e","preventDefault","name","movieName","handleChange","to","onSubmit","onChange","placeholder","Container","movieDiv","Row","map","index","key","Watchlist","App","path","exact","component","Boolean","window","location","hostname","match","initialState","reducer","action","results","filter","persistedState","localStorage","getItem","JSON","parse","setItem","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30142fbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDiv\":\"Search_movieDiv__1v890\"};","import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport styles from './MovieCard.module.css';\n\nexport default class Details extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      hidden: true,\n      movieDetails: {}\n    }\n  }\n\n  getDetails = (id) => {\n    fetch(`https://www.omdbapi.com/?apikey=efe3c50b&i=${id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data) {\n          this.setState({\n            hidden: !this.state.hidden,\n            movieDetails: data\n          })\n        }\n      })\n  }\n  \n  render() {\n    const { Plot, Genre, Awards, Actors, Director, Writer, imdbRating } = this.state.movieDetails\n    const id = this.props.id\n\n    return (\n      <div>\n          <Button className={styles.button} onClick={() => {this.getDetails(id)}} variant=\"secondary\">Movie Details</Button>\n          {!this.state.hidden && \n            <div className={styles.details}>\n              { Plot !== 'N/A' && <p><b>Plot: </b>{Plot}</p> }\n              { Genre !== 'N/A' && <p><b>Genre: </b>{Genre}</p> }\n              { Awards !== 'N/A' && <p><b>Awards: </b>{Awards}</p> }\n              { Actors !== 'N/A' && <p><b>Actors: </b>{Actors}</p> }\n              { Director !== 'N/A' && <p><b>Director: </b>{Director}</p> }\n              { Writer !== 'N/A' && <p><b>Writer: </b>{Writer}</p> }\n              { imdbRating !== 'N/A' && \n                <div className={styles.rating}>\n                  <span className={styles.imdb}><a href={`https://www.imdb.com/title/${id}`} target=\"_blank\">IMDb</a></span>\n                  <span>{imdbRating}/10</span>\n                  <span>⭐️</span>\n                </div>\n              }\n            </div>  \n          }\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Card, Col, Button } from 'react-bootstrap'\nimport styles from './MovieCard.module.css';\nimport { connect } from 'react-redux';\nimport { addMovie, deleteMovie } from './redux/action';\nimport Details from './Details';\n// import { useLocation } from 'react-router-dom'\n\n// alternative location-based ternary included for future reference\n\nfunction MovieCard(props) {\n  // const location = useLocation()\n  return (\n    <Col sm={6} md={4} lg={3}>\n      <Card className={styles.card}>\n        <img src={props.movie.Poster} className={styles.image} alt=\"\" />\n        <div className={styles.info}>\n          <h4>{props.movie.Title}</h4>\n          <h5>{props.movie.Year}</h5>\n        </div>\n        <div className={styles.buttons}>\n          <Details id={props.movie.imdbID} />\n          {\n            props.movies.findIndex((movie) => props.movie.imdbID === movie.imdbID) === -1 ? \n              <Button className={styles.button} onClick={() => {props.addMovie(props.movie)}}>Add to Watchlist</Button> \n            :\n              <Button className={styles.button} onClick={() => {props.deleteMovie(props.movie)}}>Remove from Watchlist</Button>\n          }\n        </div>\n          {/* {\n            location.pathname === '/' ? \n              <Button className={styles.button} onClick={() => {props.addMovie(props.movie)}}>Add to Watchlist</Button> \n            :\n              <Button className={styles.button} onClick={() => {props.deleteMovie(props.movie)}}>Remove from Watchlist</Button>\n          } */}\n          \n      </Card>\n    </Col>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies\n  }\n}\n\nconst mapDispatchToProps = {\n  addMovie,\n  deleteMovie\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MovieCard)\n\n","export const ADDMOVIE = 'ADDMOVIE';\nexport const DELETEMOVIE = 'DELETEMOVIE';\n\nexport function addMovie(value) {\n  return {\n    type: ADDMOVIE,\n    value\n  }\n}\n\nexport function deleteMovie(value) {\n  return {\n    type: DELETEMOVIE,\n    value\n  }\n}","import React, { Component } from 'react'\nimport MovieCard from './MovieCard';\nimport styles from './Search.module.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Container, Row, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      movieName: '',\n      movies: []\n    }\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    let name = this.state.movieName\n    fetch(`https://www.omdbapi.com/?apikey=efe3c50b&s=${name}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.Search) {\n          this.setState({\n            movies: data.Search,\n            movieName: ''\n          })\n        }\n      })\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      movieName: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>Scene It</h1>\n          <h5 className=\"mt-2 mb-3\">Search for the movies you love and save them to your watchlist.</h5>\n          <Link to='/watchlist'>Go to My Watchlist</Link>\n          <form onSubmit={ this.handleFormSubmit }>\n            <input type=\"text\" id=\"search\" name=\"search\" value={ this.state.movieName } onChange={ this.handleChange } placeholder=\"Search for a movie...\"></input>\n            <Button type=\"submit\" variant=\"secondary\">Search</Button>\n          </form>\n        </header>\n        <Container className={styles.movieDiv}>\n          <Row>\n            { this.state.movies.map((movie, index) => {\n              return (\n                <MovieCard movie={ movie } key={ index } />\n              )\n            })}\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport MovieCard from './MovieCard';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { Container, Row } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nclass Watchlist extends Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>Scene It</h1>\n          <h5 className=\"mt-2 mb-3\">Search for the movies you love and save them to your watchlist.</h5>\n          <Link to='/'>Back to Search</Link>\n        </header>\n        <Container className=\"mt-4\">\n          <Row>\n            { this.props.movies.map((movie, index) => {\n              return (\n                <MovieCard movie={ movie } key={ index } />\n              )\n            })}\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movies\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Watchlist);\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Search from './components/Search';\nimport Watchlist from './components/Watchlist';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={ Search } />\n          <Route path=\"/watchlist\" component={ Watchlist } />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADDMOVIE, DELETEMOVIE } from './action'\n\nconst initialState = {\n  movies: []\n}\n\nfunction reducer(state = initialState, action) {\n  switch(action.type) {\n    case ADDMOVIE:\n      return {\n        movies: [...state.movies, action.value]\n      }\n      break;\n    case DELETEMOVIE:\n      let results = state.movies.filter(movie => movie.imdbID !== action.value.imdbID)\n      return {\n        movies: results\n      }\n      break;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer.js'\n\n// check or creates persisted Storage\nconst persistedState = localStorage.getItem('reduxState')\n    ? JSON.parse(localStorage.getItem('reduxState')) : localStorage.setItem('reduxState', '')\n\nconst store = createStore(\n    reducer, persistedState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// subscribes persisted storage to the global redux store\nstore.subscribe(() => {\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store'\n\nReactDOM.render(\n  <Provider store={ store }>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__1BoR8\",\"image\":\"MovieCard_image__2Osdo\",\"button\":\"MovieCard_button__38etA\",\"header\":\"MovieCard_header__d0ix0\",\"rating\":\"MovieCard_rating__6tgu0\",\"imdb\":\"MovieCard_imdb__2D2J8\",\"details\":\"MovieCard_details__2tPKq\",\"info\":\"MovieCard_info__3B5KF\",\"buttons\":\"MovieCard_buttons__2Jodv\"};"],"sourceRoot":""}